{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Fliter/Filter.jsx","components/Phonebook/ContactList.jsx","components/Phonebook/Phonebook.jsx","components/App/App.jsx","index.js"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","checkIfDuplicate","alert","props","onSubmit","id","nanoid","reset","allContacts","some","this","isBtnDis","Object","values","type","onChange","pattern","title","required","disabled","Component","Filter","target","ContactList","lists","onClick","items","map","Phonebook","contacts","filter","handleCreate","newContact","prevState","handleDelete","ev","contact","handleFilter","getFilter","toLowerCase","includes","React","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1462091.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const isDuplicate = this.checkIfDuplicate();\n    if (isDuplicate) {\n      return alert(`${this.state.name} already exist in your contacts!`);\n    }\n    this.props.onSubmit({ ...this.state, id: nanoid(3) });\n    this.reset();\n  };\n  checkIfDuplicate = () =>\n    this.props.allContacts.some(({ name }) => name === this.state.name);\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    const { handleChange, state, handleSubmit } = this;\n    const { name, number } = state;\n    const isBtnDis = Object.values(this.state).some((value) => {\n      return !value;\n    });\n    return (\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\" Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \"\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            // id={nanoid(3)}\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\" Phone number must be digits and can contain spaces, dashes, parentheses and can start with + \"\n            required\n          />\n        </label>\n        <br />\n        <button type=\"submit\" disabled={isBtnDis}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ onChange, value }) => {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ lists, onClick, items }) => {\n  return (\n    <div>\n      <ul>\n        {lists.map(({ name, number, id }) => (\n          <li key={id}>\n            {name}: {number}\n            <button type=\"button\" id={id} onClick={onClick}>\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  lists: PropTypes.array,\n};\n\nexport default ContactList;\n","import React from \"react\";\n// import { nanoid } from \"nanoid\";\n\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Filter from \"../Fliter/Filter\";\nimport ContactList from \"./ContactList\";\n\nclass Phonebook extends React.Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    ],\n    filter: \"\",\n  };\n  //зміни\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  // створення\n  handleCreate = (newContact) => {\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n  //видалення\n  handleDelete = (ev) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== ev.target.id\n      ),\n    }));\n  };\n\n  handleFilter = (value) => this.setState({ filter: value });\n  getFilter = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { handleCreate, handleDelete, handleFilter, getFilter } = this;\n    const { filter, contacts } = this.state;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm allContacts={contacts} onSubmit={handleCreate} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={handleFilter} />\n        <ContactList lists={getFilter()} onClick={handleDelete} />\n      </div>\n    );\n  }\n}\n\nexport default Phonebook;\n","import Phonebook from \"../Phonebook/Phonebook\";\n\nconst App = () => {\n  return (\n    <div>\n      <>\n        <Phonebook />\n      </>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./styles/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}